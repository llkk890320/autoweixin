package com.aipin.wx.autowx;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import com.aipin.wx.autowx.core.Core;import com.aipin.wx.autowx.core.MessageTools;import com.aipin.wx.autowx.core.MsgCenter;import com.aipin.wx.autowx.core.WeiXinApi;import com.aipin.wx.autowx.face.IMsgHandler;import com.aipin.wx.autowx.utils.SleepUtils;import com.aipin.wx.autowx.utils.enums.WXStatusEnum;public class WeixinRobot {	private static final Logger LOG = LoggerFactory			.getLogger(WeixinRobot.class);	private IMsgHandler msgHandler;	private WeiXinApi service;	private Core core;	private String qrPath;	private MessageTools messageTool;	private WXStatusEnum wxstatus;	public WeixinRobot(IMsgHandler msgHandler, String qrPath) {		System.setProperty("jsse.enableSNIExtension", "false"); // 防止SSL错误		this.msgHandler = msgHandler;		core = new Core();		this.qrPath = qrPath;		service = new WeiXinApi(core);		messageTool = new MessageTools(core);		wxstatus = WXStatusEnum.CREATE;	}	// 处理收到的消息	public void handleMsg() {		MsgCenter.handleMsg(msgHandler, core, messageTool);	}	// 查看是否有新的消息	public void receiveMsg() {		this.checkAvtive();		if (wxstatus == WXStatusEnum.WAITING_SCAN) {			if (!core.isAlive()) {				service.login();				core.setAlive(true);				LOG.info(("登陆成功"));				wxstatus = WXStatusEnum.LOGINED;				this.afterLogin();			}		}		if (core.isAlive())			service.receivingMsg();	}	public void checkAvtive() {		if (core.isAlive()) {			long t1 = System.currentTimeMillis(); // 秒为单位			if (t1 - core.getLastNormalRetcodeTime() > 60 * 1000) { // 超过60秒，判为离线				core.setAlive(false);			}		}	}	public void afterLogin() {		LOG.info("5. 登陆成功，微信初始化");		if (!service.webWxInit()) {			LOG.info("6. 微信初始化异常");			System.exit(0);		}		LOG.info("6. 开启微信状态通知");		service.wxStatusNotify();		LOG.info("7. 清除。。。。");		// CommonTools.clearScreen();		LOG.info(String.format("欢迎回来， %s", core.getNickName()));		LOG.info("8. 开始接收消息");		// service.startReceiving();		LOG.info("9. 获取联系人信息");		service.webWxGetContact();		LOG.info("10. 获取群好友及群好友列表");		service.WebWxBatchGetContact();		LOG.info("11. 缓存本次登陆好友相关消息");		messageTool.setUserInfo(); // 登陆成功后缓存本次登陆好友相关消息（NickName, UserName）	}	public void login() {		if (core.isAlive()) { // 已登陆			LOG.info(" 已登陆");			return;		}		for (int count = 0; count < 10; count++) {			LOG.info("获取UUID");			while (service.getUuid() == null) {				LOG.info("1. 获取微信UUID");				while (service.getUuid() == null) {					LOG.warn("1.1. 获取微信UUID失败，两秒后重新获取");					SleepUtils.sleep(1000);				}			}			LOG.info("2. 获取登陆二维码图片");			if (service.getQR(qrPath)) {				break;			} else if (count == 10) {				LOG.error("2.2. 获取登陆二维码图片失败，系统退出");				System.exit(0);			}		}		LOG.info("3. 请扫描二维码图片，并在手机上确认");		wxstatus=WXStatusEnum.WAITING_SCAN;	}}